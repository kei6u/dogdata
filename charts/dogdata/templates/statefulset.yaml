apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "dogdataPostgres.fullname" . }}
  namespace: {{ .Release.Namespace | quote }}
  labels:
    {{- include "dogdataPostgres.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "dogdataPostgres.selectorLabels" . | nindent 6 }}
  serviceName: {{ include "dogdataPostgres.fullname" . }}
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        {{- include "dogdataPostgres.selectorLabels" . | nindent 8 }}
    spec:
      containers:
        - env:
          - name: POSTGRES_USER
            value: {{ .Values.postgresConfig.user }}
          - name: POSTGRES_PASSWORD
            value: {{ .Values.postgresConfig.password }}
          - name: POSTGRES_DB
            value: {{ .Values.postgresConfig.db }}
          - name: PGDATA
            value: /var/lib/postgresql/data/pgdata
          - name: POSTGRES_INITDB_ARGS
            value: --auth-host=scram-sha-256
          - name: POD_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.podIP
          image: postgres
          imagePullPolicy: IfNotPresent
          name: {{ include "dogdataPostgres.fullname" . }}
          ports:
            - containerPort: 5432
              protocol: TCP
          resources: null
          volumeMounts:
            - mountPath: /docker-entrypoint-initdb.d/init.sql
              name: init-sql
              subPath: init.sql
            - mountPath: /var/lib/postgresql/data
              name: postgres
          livenessProbe:
            exec:
              command:
                - sh
                - -c
                - exec pg_isready --host $POD_IP
            failureThreshold: 6
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          readinessProbe:
            exec:
              command:
                - sh
                - -c
                - exec pg_isready --host $POD_IP
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 3
      volumes:
        - configMap:
            items:
              - key: init.sql
                path: init.sql
            name: {{ include "dogdataPostgres.fullname" . }}
          name: init-sql
        - name: postgres
          persistentVolumeClaim:
            claimName: {{ include "dogdataPostgres.fullname" . }}
